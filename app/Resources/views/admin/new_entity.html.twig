{% extends 'admin/index.html.twig' %}

{% block content %}
    <h1>{{ title }}</h1>
    {{ form_start(form, {'attr' : {'id': 'form_article'}}) }}
    <ul class="slides" data-prototype="{{ form_widget(form.slides.vars.prototype)|e('html_attr') }}">
        {% for slide in form.slides %}
            <li>{{ form_row(slide.title) }}</li>
            <li>{{ form_row(slide.description) }}</li>
            <li>{{ form_row(slide.file) }}</li>
        {% endfor %}
    </ul>
    {{ form_widget(form) }}
    <input type="submit" value="{{ button }}" class="btn btn-default" id="{{ form.vars.id }}">
    {{ form_end(form) }}
{% endblock content %}

{% block javascript %}
    {{ parent() }}
    <script src="{{ asset('js/ckeditor/ckeditor.js') }}"></script>
    <script src="{{ asset('js/ckfinder/ckfinder.js') }}"></script>
    <script src="{{ asset('js/ckeditor/config.js') }}"></script>
    <script>
        if (document.getElementById("article_description") && document.getElementById("article_content") ) {
            var editor1 = CKEDITOR.replace( 'article_description' );
            var editor2 = CKEDITOR.replace( 'article_content' );
            editor2.config.height = 600;
            CKFinder.setupCKEditor(editor1);
            CKFinder.setupCKEditor(editor2);
        }

        if (document.getElementById("page_content") ) {
            var editor = CKEDITOR.replace( 'page_content' );
            CKFinder.setupCKEditor(editor);
        }

        var $collectionHolder;

        // setup an "add a tag" link
        var $addSlideLink = $('<a href="#" class="add_slide_link btn btn-default">Add a slide</a>');
        var $newLinkLi = $('<li></li>').append($addSlideLink);

        function addSlideForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
        }

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.slides');

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addSlideLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new slide form (see next code block)
                addSlideForm($collectionHolder, $newLinkLi);
            });
        });

        {#(function($){#}
            {#var file;#}
            {#$('input#article_file').on('change', function(e){#}
                {#file = e.target.files[0];#}
            {#});#}

            {#$('input#article').click(function(e){#}
                {#e.preventDefault();#}

                {#var article = {#}
                    {#"article": {#}
                        {#"title": $('#article_title').val(),#}
                        {#"description": editor1.getData(),#}
                        {#"content": editor2.getData(),#}
                        {#"categories": $('#article_categories').val(),#}
                        {#"users": {{ app.user.id }}#}
                    {#}#}
                {#};#}

                {#$.ajax({#}
                    {#url: Routing.generate("ajax_new_article"),#}
                    {#data: JSON.stringify(article),#}
                    {#processData: false,#}
                    {#contentType: false,#}
                    {#type: "POST",#}
                    {#success: function(data){#}
                        {#console.log(data);#}

                        {#$.ajax({#}
                            {#url: Routing.generate("ajax_article_add_image", {id: data.aid}),#}
                            {#data: file,#}
                            {#processData: false,#}
                            {#contentType: false,#}
                            {#type: "POST",#}
                            {#success: function(data){#}
                                {#console.log(data);#}
                            {#},#}
                            {#error: function(error){#}
                                {#console.log(error);#}
                            {#}#}
                        {#});#}
                    {#},#}
                    {#error: function(error){#}
                        {#console.log(error);#}
                    {#}#}
                {#});#}
            {#});#}
        {#})(jQuery);#}
    </script>
{% endblock javascript %}